@page "/profile"
@using CarGo.Models;
@using CarGo.Data
@using Microsoft.EntityFrameworkCore
@inject appDbContext dbContext
@inject NavigationManager navigation
@inject IHttpContextAccessor httpContextAccessor
@rendermode InteractiveServer

<AuthorizeView>
    <Authorized>
        <section class="user-account-section py-5">
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-lg-8">
                        <div class="card shadow-sm mb-4">
                            <div class="card-header bg-primary text-white text-center">
                                <h3 class="mb-0">Llogaria Ime</h3>
                            </div>
                            <div class="card-body">
                                <div class="text-center mb-4">
                                    <img src="/account.png" alt="Profile Image" class="rounded-circle mb-2" width="150px" height="150px" style="object-fit:cover" />
                                    <h4>@user.FirstName @user.LastName</h4>
                                    @* <p class="text-muted">Rating: ⭐ @user.Rating</p> *@
                                </div>
                                <hr />
                                <div class="row">
                                    <div class="col-md-6">
                                        <p><strong>Email:</strong> @user.Email</p>
                                        <p><strong>Telefon:</strong> @user.PhoneNumber</p>
                                    </div>
                                    <div class="col-md-6">
                                        <p><strong>Adresa:</strong> @user.Address</p>
                                        <p><strong>Qyteti:</strong> @user.City</p>
                                        <p><strong>Vendi:</strong> @user.Country</p>
                                    </div>
                                </div>
                            </div>
                            @* <div class="card-footer text-center">
                            <button class="btn btn-outline-primary me-2" @onclick="EditProfile">Ndrysho Profilin</button>
                            <button class="btn btn-outline-danger" @onclick="Logout">Dil</button>
                            </div> *@
                        </div>

                        <!-- Activity Section: Purchased Cars and Inspection/Transportation Status -->
                        <div class="card shadow-sm mb-4">
                            <div class="card-header bg-secondary text-white text-center">
                                <h4>Activity</h4>
                            </div>
                            <div class="card-body">
                                @if (userCars.Any())
                                {
                                    @foreach (var car in userCars)
                                    {
                                        var carDetails = dbContext.Cars.First(c => c.Id == car.CarId);
                                        <div class="mb-4">
                                            <h5>@carDetails.Model @carDetails.Brand (@carDetails.Year)</h5>
                                            @if (car.InspectorId is null && car.TransportId is null)
                                            {
                                                <div class="progress mb-2">
                                                    <div class="progress-bar" role="progressbar" style="width: 33%" aria-valuenow="33" aria-valuemin="0" aria-valuemax="100">Getting Inspected</div>
                                                </div>
                                                <p class="text-muted"><strong>Note:</strong> @car.Notes</p>
                                                <div>
                                                    <button class="btn btn-success me-2" @onclick="() => ProceedWithInspection(car.Id)">Continue</button>
                                                    <button class="btn btn-danger" @onclick="() => CancelInspection(car.Id)">Cancel</button>
                                                </div>
                                            }
                                            else if (car.TransportId is null)
                                            {
                                                <div class="progress mb-2">
                                                    <div class="progress-bar bg-warning" role="progressbar" style="width: 66%" aria-valuenow="66" aria-valuemin="0" aria-valuemax="100">Getting Transported</div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="progress mb-2">
                                                    <div class="progress-bar bg-success" role="progressbar" style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">Completed</div>
                                                </div>
                                            }
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted">No active cars for inspection or transportation.</p>
                                }
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section class="cta text-center py-5 text-black">
            <div>
                <h2>Faleminderit që jeni pjesë e komunitetit tonë!</h2>
            </div>
        </section>
    </Authorized>

    <NotAuthorized>
        <div style="text-align:center; padding:150px;">
            <h3>You must be logged in to see your Profile!</h3>
            <p>Please log in to access this page.</p>
            <button class="btn btn-primary" @onclick="NavigateToLogin">Go to Login</button>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private User user = new User();
    private List<Order> userCars = new List<Order>();
    private HttpContext httpContext;

    protected override async Task OnInitializedAsync()
    {
        var email = httpContextAccessor.HttpContext.User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value;

        if (email != null)
        {
            user = dbContext.Users.First(u => u.Email == email);
            userCars = dbContext.Orders.Where(p => p.BuyerId == user.Id && p.Notes != null).ToList();
            StateHasChanged();
        }
    }

    private async Task ProceedWithInspection(int orderId)
    {
        var order = dbContext.Orders.FirstOrDefault(o => o.Id == orderId);
        if (order != null)
        {
            order.TransportId = dbContext.TransportCompany.First().Id;
            dbContext.SaveChanges();
            userCars = dbContext.Orders.Where(p => p.BuyerId == user.Id && p.Notes != null).ToList(); // Refresh the list
            StateHasChanged();
        }
    }

    private async Task CancelInspection(int orderId)
    {
        var order = dbContext.Orders.FirstOrDefault(o => o.Id == orderId);
        if (order != null)
        {
            dbContext.Cars.First(c => c.Id == order.CarId).Status = "For Sale";
            dbContext.Orders.Remove(order);
            dbContext.SaveChanges();
            userCars = dbContext.Orders.Where(p => p.BuyerId == user.Id && p.Notes != null).ToList(); // Refresh the list
            StateHasChanged();
        }
    }


    private void NavigateToLogin()
    {
        navigation.NavigateTo("/account");
    }
}

