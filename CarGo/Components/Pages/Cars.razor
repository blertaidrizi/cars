@page "/cars"
@using CarGo.Models
@using CarGo.Data
@inject appDbContext dbContext;
@inject NavigationManager navigation;
@rendermode InteractiveServer

<PageTitle>Cars</PageTitle>

<h3 class="text-center mb-4 fw-bold text-primary">🚗 Search your car</h3>

<div class="container shadow-lg p-4 rounded-3 bg-white">
    <!-- Filter Section -->
    <div class="row mb-4 g-3">
        <!-- Brand Selection -->
        <div class="col-md-3">
            <label for="carBrand" class="form-label fw-semibold">Car Brand:</label>
            <select id="carBrand" class="form-select" @onchange="BrandChanged">
                <option value="">-- All Brands --</option>
                @foreach (var brand in brands)
                {
                    <option value="@brand">@brand</option>
                }
            </select>
        </div>
        <!-- Model Selection -->
        <div class="col-md-3">
            <label for="carModel" class="form-label fw-semibold">Car Model:</label>
            <select id="carModel" class="form-select" @bind="selectedModel" disabled="@string.IsNullOrEmpty(selectedBrand)">
                <option value="">-- Select Model --</option>
                @if (!string.IsNullOrEmpty(selectedBrand))
                {
                    @foreach (var model in models)
                    {
                        <option value="@model">@model</option>
                    }
                }
            </select>
        </div>
        <!-- Year Selection -->
        <div class="col-md-3">
            <label for="year" class="form-label fw-semibold">Year:</label>
            <InputNumber id="year" class="form-control" @bind-Value="selectedYear"/>
        </div>
        <!-- Price Range -->
        <div class="col-md-3">
            <label class="form-label fw-semibold">Price Range:</label>
            <div class="input-group">
                <input type="number" class="form-control" placeholder="From" @bind="priceFrom" min="1" max="1000000" />
                <span class="input-group-text">-</span>
                <input type="number" class="form-control" placeholder="To" @bind="priceTo" min="1" max="1000000" />
            </div>
        </div>
    </div>

    <div class="row mb-4 g-3">
        <!-- Kilometers Range -->
        <div class="col-md-3">
            <label for="kilometers" class="form-label fw-semibold">Kilometers:</label>
            <div class="input-group">
                <input type="number" class="form-control" placeholder="From" @bind="kilometersFrom" min="0" max="1000000" />
                <span class="input-group-text">-</span>
                <input type="number" class="form-control" placeholder="To" @bind="kilometersTo" min="0" max="1000000" />
            </div>
        </div>
        <!-- Horsepower Range -->
        <div class="col-md-3">
            <label for="horsePower" class="form-label fw-semibold">Horsepower:</label>
            <div class="input-group">
                <input type="number" class="form-control" placeholder="From" @bind="horsePowerFrom" min="1" max="1500" />
                <span class="input-group-text">-</span>
                <input type="number" class="form-control" placeholder="To" @bind="horsePowerTo" min="1" max="1500" />
            </div>
        </div>
        <!-- Fuel Type Selection -->
        <div class="col-md-3">
            <label for="fuelType" class="form-label fw-semibold">Fuel Type:</label>
            <select id="fuelType" class="form-select" @bind="fuelType">
                <option value="">-- Select Fuel Type --</option>
                <option value="Petrol">Petrol</option>
                <option value="Diesel">Diesel</option>
                <option value="Electric">Electric</option>
                <option value="Hybrid">Hybrid</option>
            </select>
        </div>
        <!-- Emission Class Selection -->
        <div class="col-md-3">
            <label for="emissionClass" class="form-label fw-semibold">Emission Class:</label>
            <select id="emissionClass" class="form-select" @bind="emissionClass">
                <option value="">-- Select Emission Class --</option>
                <option value="Euro 5">Euro 5</option>
                <option value="Euro 6">Euro 6</option>
            </select>
        </div>
    </div>

    <div class="row mb-4 g-3">
        <!-- Filter Button -->
        <div class="col-md-12 d-grid">
            <button class="btn btn-primary btn-lg fw-semibold" @onclick="OnFilterClicked">🔍 Filter Cars</button>
        </div>
    </div>
</div>

<!-- Car List Section -->
<div class="container mt-5">
    <h4 class="fw-bold mb-3">Available Cars:</h4>
    @if (filteredCars.Any())
    {
        <div class="row g-3">
            @foreach (var car in filteredCars)
            {
                <div class="col-md-4" @onclick='()=>NavigateToCar(car.Id)'>
                    <div class="card shadow-sm border-0">
                        @foreach (var image in filteredImages)
                        {
                            if (image.CarId == car.Id)
                            {
                                string imageUrl = image.Url;

                                // Check if the image URL is an internal upload path
                                if (!Uri.IsWellFormedUriString(imageUrl, UriKind.Absolute))
                                {
                                    // It's an internal image path, prepend the /uploads/ base URL
                                    imageUrl = imageUrl;
                                }

                                <img src="@imageUrl" class="card-img-top" alt="@car.Model">
                                break;
                            }
                        }

                        <div class="card-body">
                            <h5 class="card-title fw-bold">@car.Brand @car.Model</h5>
                            <p class="card-text">
                                Year: @car.Year <br>
                                Price: $@car.Price <br>
                                Transmission: @car.Transmission
                            </p>
                            <a href="/car/@car.Id" class="btn btn-outline-primary btn-sm">View Details</a>

                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-muted">No cars match the selected criteria.</p>
    }
</div>



@code {
    private string selectedBrand = string.Empty;
    private string selectedModel = string.Empty;
    private int? selectedYear = null;
    private decimal? priceFrom = null;
    private decimal? priceTo = null;
    private int? kilometersFrom = null;
    private int? kilometersTo = null;
    private int? horsePowerFrom = null;
    private int? horsePowerTo = null;
    private string fuelType = string.Empty;
    private string emissionClass = string.Empty;

    private List<Car> filteredCars = new List<Car>();
    private List<CarGo.Models.Image> filteredImages = new List<CarGo.Models.Image>();

    private List<string> brands = new List<string>();
    private List<string> models = new List<string>();

    private List<int> years = Enumerable.Range(1980, DateTime.Now.Year - 1979).ToList();

    protected override void OnInitialized()
    {
        brands = dbContext.Cars.Select(car => car.Brand).Distinct().ToList();
        models = dbContext.Cars.Where(car => car.Brand == selectedBrand).Select(car => car.Model).Distinct().ToList();
        filteredCars = dbContext.Cars.Where(c=>c.Status=="For Sale").ToList();
        filteredImages = dbContext.Images.ToList();
    }

    private void BrandChanged(ChangeEventArgs e)
    {
        selectedBrand = e.Value.ToString()??String.Empty;

        if (!string.IsNullOrEmpty(selectedBrand))
        {
            models = dbContext.Cars
                .Where(car => car.Brand == selectedBrand)
                .Select(car => car.Model)
                .Distinct()
                .ToList();
        }
        else
        {
            models = new List<string>();
        }

        selectedModel = string.Empty;

        StateHasChanged();
    }

    private void NavigateToCar(int id)
    {
        navigation.NavigateTo($"/car/{id}");
    }

    private void OnFilterClicked()
    {
        filteredCars = dbContext.Cars.Where(car =>
            (string.IsNullOrEmpty(selectedBrand) || car.Brand == selectedBrand) &&
            (string.IsNullOrEmpty(selectedModel) || car.Model == selectedModel) &&
            (!selectedYear.HasValue|| car.Year == selectedYear) &&
            (!priceFrom.HasValue || car.Price >= priceFrom.Value) &&
            (!priceTo.HasValue || car.Price <= priceTo.Value) &&
            (!kilometersFrom.HasValue || car.Km >= kilometersFrom.Value) &&
            (!kilometersTo.HasValue || car.Km <= kilometersTo.Value) &&
            (!horsePowerFrom.HasValue || car.Hp >= horsePowerFrom.Value) &&
            (!horsePowerTo.HasValue || car.Hp <= horsePowerTo.Value) &&
            (string.IsNullOrEmpty(fuelType) || car.Fuel == fuelType) &&
            (string.IsNullOrEmpty(emissionClass) || car.EmissionClass == emissionClass)&&
            car.Status=="For Sale"
        ).ToList();
    }

} 
